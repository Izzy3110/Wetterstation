# Global tags applied to all metrics
[global_tags]
  # customer = "device-390eaf5c-bdf5-4f4c-97bf-291e7d65bc0f"
  # environment = "Dev"
  os = "docker"

# Agent configuration
[agent]
  interval = "60s"                 # Data collection interval
  round_interval = true            # Round collection interval
  metric_batch_size = 1000         # Max number of metrics to send in a single batch
  metric_buffer_limit = 10000      # Max number of metrics to keep in memory
  collection_jitter = "0s"         # Add random delays to collection to avoid load spikes
  flush_interval = "10s"           # How often to flush data to output plugins
  flush_jitter = "0s"              # Add random delays to flushing to avoid load spikes
  precision = ""                   # Timestamp precision for metrics
  hostname = "docker-telegraf"     # Override default hostname
  omit_hostname = false            # Include hostname in metrics
  debug = true

# Output plugin configuration for InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://10.238.79.125:8086"]  # InfluxDB server URL
  # database = "metrics"              # Database name
  timeout = "5s"                   # Timeout for HTTP requests
  #username = "influx_user"               # InfluxDB username
  #password = "KseafInflux!?1"               # InfluxDB password
  token = "ZJF49IkzNlsc2Q2P7Rr6d2VSoiEQBIp-X520KpkNLDd5CscQMDBA5i0UF8epd8QheV4J5IREEg7dIUmdd3uFYg=="
  organization = "WYL"
  bucket = "telegraf"
[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a separate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["tcp://10.238.79.125:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "Izzy3110/feeds/+/#",
  ]

  ## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  topic_tag = ""

  ## QoS policy for messages
  ##   0 = at most once
  ##   1 = at least once
  ##   2 = exactly once
  ##
  ## When using a QoS of 1 or 2, you should enable persistent_session to allow
  ## resuming unacknowledged messages.
  # qos = 0


  ## Connection timeout for initial connection in seconds
  connection_timeout = "30s"

  ## Interval and ping timeout for keep-alive messages
  ## The sum of those options defines when a connection loss is detected.
  ## Note: The keep-alive interval needs to be greater or equal one second and
  ## fractions of a second are not supported.
  keepalive = "60s"
  ping_timeout = "10s"

  ## Max undelivered messages
  ## This plugin uses tracking metrics, which ensure messages are read to
  ## outputs before acknowledging them to the original broker to ensure data
  ## is not lost. This option sets the maximum messages to read from the
  ## broker that have not been written by an output.
  ##
  ## This value needs to be picked with awareness of the agent's
  ## metric_batch_size value as well. Setting max undelivered messages too high
  ## can result in a constant stream of data batches to the output. While
  ## setting it too low may never flush the broker's messages.
  # max_undelivered_messages = 1000

  ## Persistent session disables clearing of the client session on connection.
  ## In order for this option to work you must also set client_id to identify
  ## the client.  To receive messages that arrived while the client is offline,
  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
  ## publishing. Finally, using a persistent session will use the initial
  ## connection topics and not subscribe to any new topics even after
  ## reconnecting or restarting without a change in client ID.
  # persistent_session = false

  ## If unset, a random client ID will be generated.
  # client_id = ""

  ## Username and password to connect MQTT server.
  username = "mqtt_user"
  password = "mqtt_pass"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## Client trace messages
  ## When set to true, and debug mode enabled in the agent settings, the MQTT
  ## client's messages are included in telegraf logs. These messages are very
  ## noisey, but essential for debugging issues.
  client_trace = false

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "Izzy3110/feeds/+/#"
    # measurement = "_/mqtt_consumer"
    tags = "_/_/device_uuid/topic"
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "Izzy3110/feeds/+/sensor/+"
    # measurement = "_/mqtt_consumer"
    tags = "_/_/device_uuid/topic/sensor_name"
[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]
  data_format = "influx"
  influx_max_line_bytes = 0
  influx_sort_fields = false
  influx_uint_support = false
